#!/bin/sh
# Sets up Ubuntu 18.04 from bare-bones installation 
# Comment out what you don't need or run line-by-line, manually
export DEBIAN_FRONTEND=noninteractive
sudo apt-get -qq update && \
sudo apt-get -qq install -y cmake make git vim gcc g++ gfortran software-properties-common \
   python3 wget gnupg-agent \
   mpich libmpich-dev \
   openmpi-bin openmpi-doc libopenmpi-dev  

sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get -qq update && \
     apt-get -qq install -y gcc-8 g++-8 gfortran-8 \
     apt-get -qq install -y gcc-9 g++-9 gfortran-9 \
     apt-get -qq install -y gcc-10 g++-10 gfortran-10

sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 \
                         --slave /usr/bin/g++ g++ /usr/bin/g++-7 \
                         --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-7 \
                         --slave /usr/bin/gcov gcov /usr/bin/gcov-7

sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90 \
                         --slave /usr/bin/g++ g++ /usr/bin/g++-8 \
                         --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-8 \
                         --slave /usr/bin/gcov gcov /usr/bin/gcov-8

sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 80 \
                         --slave /usr/bin/g++ g++ /usr/bin/g++-9 \
                         --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-9 \
                         --slave /usr/bin/gcov gcov /usr/bin/gcov-9

sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 70 \
                         --slave /usr/bin/g++ g++ /usr/bin/g++-10 \
                         --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-10 \
                         --slave /usr/bin/gcov gcov /usr/bin/gcov-10

sudo chmod u+s /usr/bin/update-alternatives

# Intel graphics software for computation
sudo wget -q https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
sudo rm -f GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
sudo echo "deb https://apt.repos.intel.com/oneapi all main" >> /etc/apt/sources.list.d/oneAPI.list
sudo echo "deb [trusted=yes arch=amd64] https://repositories.intel.com/graphics/ubuntu bionic main" >> /etc/apt/sources.list.d/intel-graphics.list

sudo apt-get -qq update && \
     apt-get -qq install -y \
             intel-basekit-getting-started \
             intel-hpckit-getting-started \
             intel-oneapi-common-vars \
             intel-oneapi-common-licensing \
             intel-oneapi-dev-utilities \
             intel-oneapi-icc \
             intel-oneapi-ifort \
             intel-opencl

# Generic OpenCL Loader
sudo apt-get -qq update && \
     apt-get -qq install -y clinfo ocl-icd-libopencl1 ocl-icd-* opencl-headers
     #apt-get -qq install -y clinfo ocl-icd-libopencl1 ocl-icd opencl-headers && \

# Nvidia GPU software for computation
sudo wget -q https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.2.89-1_amd64.deb
sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
sudo dpkg -i cuda-repo-ubuntu1804_10.2.89-1_amd64.deb
sudo apt-get -qq update && \
     apt-get -qq install -y cuda-toolkit-10-2 cuda-tools-10-2 cuda-compiler-10-2 \
        cuda-libraries-10-2 cuda-libraries-dev-10-2 libnvidia-compute-450

# ROCm software installation
sudo apt-get -qq update && \
     apt-get -qq install -y libnuma-dev

sudo wget -qO - http://repo.radeon.com/rocm/apt/debian/rocm.gpg.key | apt-key add -
sudo echo 'deb [arch=amd64] http://repo.radeon.com/rocm/apt/debian/ xenial main' >> /etc/apt/sources.list.d/rocm.list
sudo apt-get -qq update && \
     apt-get -qq install -y rocm-opencl-dev rocm-dkms

# Vendor OpenCL
sudo apt-get -qq install -y mesa-opencl-icd

sudo apt-get clean && rm -rf /var/lib/apt/lists/*

make clean
make
